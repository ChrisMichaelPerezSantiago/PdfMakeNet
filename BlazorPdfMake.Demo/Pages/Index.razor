@page "/"
@using PdfMakeNet
@using Newtonsoft.Json

<h2>PdfMakeNet Demo - Basic</h2>
<button @onclick=@OpenInNewTab>Run sample in new tab</button>
<p>Basic sample using: PdfMakeNet</p>
<pre class="preformatted">
[Inject] IPdfMake pdfmake { get; set; } 
//Or IPdfMake pdfmake = new PdfMake();
pdfmake.AddBodyText(new PdfMakeText()
{
    Text = "First paragraph"
});
pdfmake.AddBodyText(new PdfMakeText()
{
    Text = "Another paragraph, this time a little bit longer to make sure, this line will be divided into at least two lines"
});
//Get document definition
pdfmake.GetDocumentDefinition(Formatting.Indented);
//Button event code executing
pdfmake.GetOpenInBrowser(false)
</pre>
<p>PdfMake Document Definition Output From PdfMakeNet</p>
<pre class="preformatted">@GetDocumentDefinition()</pre>

@functions{
    [Inject] IPdfMake pdfmake { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            pdfmake.AddBodyText(new PdfMakeText()
            {
                Text = "First paragraph"
            });
            pdfmake.AddBodyText(new PdfMakeText()
            {
                Text = "Another paragraph, this time a little bit longer to make sure, this line will be divided into at least two lines"
            });
            StateHasChanged();
        }
    }
    public string GetDocumentDefinition()
    {
        return pdfmake.GetDocumentDefinition(Formatting.Indented);
    }
    public async Task OpenInNewTab()
    {
        await JSRuntime.InvokeVoidAsync("eval", pdfmake.GetOpenInBrowser(false));
    }
}